// <auto-generated />
using System;
using KernelTravelGuides.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KernelTravelGuides.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231111110141_updatemodel")]
    partial class updatemodel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KernelTravelGuides.Models.City", b =>
                {
                    b.Property<int>("city_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("city_id"), 1L, 1);

                    b.Property<string>("city_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("city_status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("city_id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("KernelTravelGuides.Models.Country", b =>
                {
                    b.Property<int>("country_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("country_id"), 1L, 1);

                    b.Property<string>("country_code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country_currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("country_id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("KernelTravelGuides.Models.Hotel", b =>
                {
                    b.Property<int>("hotel_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("hotel_id"), 1L, 1);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("hotel_average")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hotel_rating")
                        .HasColumnType("int");

                    b.Property<bool>("hotel_status")
                        .HasColumnType("bit");

                    b.HasKey("hotel_id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("KernelTravelGuides.Models.Messages", b =>
                {
                    b.Property<int>("messages_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("messages_id"), 1L, 1);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("messages_content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("messages_desc")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("messages_status")
                        .HasColumnType("bit");

                    b.Property<string>("messages_user_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("messages_id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("KernelTravelGuides.Models.Packages", b =>
                {
                    b.Property<int>("packages_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("packages_id"), 1L, 1);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("packages_desc")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("packages_img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("packages_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("packages_or_price")
                        .HasColumnType("int");

                    b.Property<bool>("packages_status")
                        .HasColumnType("bit");

                    b.Property<int>("resorts_id")
                        .HasColumnType("int");

                    b.Property<int>("t_spot_id")
                        .HasColumnType("int");

                    b.Property<int>("tra_category_id")
                        .HasColumnType("int");

                    b.Property<int>("transport_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("packages_id");

                    b.HasIndex("resorts_id");

                    b.HasIndex("t_spot_id");

                    b.HasIndex("tra_category_id");

                    b.HasIndex("transport_id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("KernelTravelGuides.Models.Province", b =>
                {
                    b.Property<int>("province_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("province_id"), 1L, 1);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("province_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("province_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("province_status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("province_id");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("KernelTravelGuides.Models.Resorts", b =>
                {
                    b.Property<int>("resorts_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("resorts_id"), 1L, 1);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("resorts_img1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resorts_img2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resorts_img3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resorts_location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resorts_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("resorts_status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("resorts_id");

                    b.ToTable("Resorts");
                });

            modelBuilder.Entity("KernelTravelGuides.Models.Restaurants", b =>
                {
                    b.Property<int>("restaurants_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("restaurants_id"), 1L, 1);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("restaurants_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("restaurants_location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("restaurants_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("restaurants_status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("restaurants_id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("KernelTravelGuides.Models.TouriestSpots", b =>
                {
                    b.Property<int>("t_spot_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("t_spot_id"), 1L, 1);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("t_spot_desc")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("t_spot_img1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("t_spot_img2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("t_spot_img3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("t_spot_locaion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("t_spot_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("t_spot_rating")
                        .HasColumnType("int");

                    b.Property<bool>("t_spot_status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("t_spot_id");

                    b.ToTable("TouriestSpots");
                });

            modelBuilder.Entity("KernelTravelGuides.Models.Transport", b =>
                {
                    b.Property<int>("transport_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("transport_id"), 1L, 1);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("transport_desc")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transport_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("transport_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("transport_price")
                        .HasColumnType("int");

                    b.Property<int>("transport_rating")
                        .HasColumnType("int");

                    b.Property<bool>("transport_status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("transport_id");

                    b.ToTable("Transports");
                });

            modelBuilder.Entity("KernelTravelGuides.Models.TravelCategory", b =>
                {
                    b.Property<int>("tra_category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tra_category_id"), 1L, 1);

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("tra_category_desc")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tra_category_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tra_category_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("tra_category_id");

                    b.ToTable("TravelCategories");
                });

            modelBuilder.Entity("KernelTravelGuides.Models.Packages", b =>
                {
                    b.HasOne("KernelTravelGuides.Models.Resorts", "resorts")
                        .WithMany()
                        .HasForeignKey("resorts_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KernelTravelGuides.Models.TouriestSpots", "t_spot")
                        .WithMany()
                        .HasForeignKey("t_spot_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KernelTravelGuides.Models.TravelCategory", "tra_category")
                        .WithMany()
                        .HasForeignKey("tra_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KernelTravelGuides.Models.Transport", "transport")
                        .WithMany()
                        .HasForeignKey("transport_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("resorts");

                    b.Navigation("t_spot");

                    b.Navigation("tra_category");

                    b.Navigation("transport");
                });
#pragma warning restore 612, 618
        }
    }
}
